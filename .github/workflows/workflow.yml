name: Main

on:
  push:
    branches: [ main ]
  pull_request: { }


jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - run: terraform fmt -check

  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - run: terraform init -backend=false
      - run: terraform validate

  check-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - run: poetry install --all-extras --no-interaction --no-ansi
      - run: poetry run cz check --rev-range origin/main..HEAD

  bump:
    runs-on: ubuntu-latest
    concurrency: release
    needs:
      - check-commits
      - fmt
      - validate
    if: success() && github.ref_name == github.event.repository.default_branch
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - run: poetry install --all-extras --no-interaction --no-ansi
      - run: |
          git config --global user.name "commitizen"
          git config --global user.email "commitizen@blindfolded.surgery"
      - name: Bump version
        run: |
          set +e
          poetry run cz bump
          EXIT_CODE="$?"
          set -e

          case $EXIT_CODE in
          21)
            exit 0;;
          0)
            ;;
          *)
            exit $EXIT_CODE;;
          esac
          VERSION=$(poetry version --short)
          git push
          git push origin "v$VERSION"
